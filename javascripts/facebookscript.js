// Generated by CoffeeScript 1.3.1


var run = function() {
  var cacheImage, cell, handleZoom, height, init, width;

  width = self.innerWidth - 10;

  height = self.innerHeight - 10;

  window.drawTree = function(insta) {
    console.log("hello");
    console.log(insta.data);
    var detail, div, json, pic, treemap, _i, _len, _ref,
    _this = this;
    div = d3.select("#chart").append("div").style("position", "absolute").style("width", width + "px").style("height", height + "px").style("top", "50%").style("left", "50%").style("margin", -.5 * height + "px 0 0 " + -.5 * width + "px");
    treemap = d3.layout.treemap().size([width, height]).sticky(true).value(function(d) {
      return d.size;
    });
    json = {
      "children": []
    };
    _ref = insta.data;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      pic = _ref[_i];
      //console.log(pic);
      name = (pic.name === undefined) ?  "" : pic.name + " | ";
      likes = (pic.likes === undefined) ? 0 : pic.likes.data.length;
      comments = (pic.comments === undefined) ? 0 : pic.comments.data.length/2;
      detail = {
        "src": pic.source,
        "size": likes + comments,
        "url": pic.link,
        "title": name + likes + " likes | " + comments * 2 + " comments"
      };
      json.children.push(detail);
    }
    document.getElementById("pagelike").style.display = "none";
    auth.style.display = "none";
    div.data([json]).selectAll("div").data(treemap.nodes).enter().append("div").attr("class", "cell").call(cell).style("background-image", function(d) {
      if (d.children) {
        return null;
      } else {
        return "url('" + d.src + "')";
      }
    }).html(function(d) {
      if (d.children) {
        return null;
      } else if (d.url) {
        return "<a href='" + d.url + "' data-url='" + d.src + "' title='" + d.title + "'></a>";
      }
    }).style("-webkit-transition", function() {
      var num, time;
      num = Math.random();
      time = "0.5s";
      return "" + time + " opacity " + num + "s";
    });
    window.zoom = new Zoom("z");
    return window.setTimeout(function() {
      var a, box, _j, _len1, _ref1, _results;
      _ref1 = document.getElementsByClassName("cell");
      _results = [];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        box = _ref1[_j];
        box.className = "cell visible";
        if (box.childNodes.length !== 0) {
          a = box.firstChild;
          a.addEventListener("mouseover", cacheImage, false);
          _results.push(a.addEventListener("click", handleZoom, false));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    }, 0);
  };

  cell = function() {
    return this.style("left", function(d) {
      return d.x + "px";
    }).style("top", function(d) {
      return d.y + "px";
    }).style("width", function(d) {
      return Math.max(0, d.dx - 1) + "px";
    }).style("height", function(d) {
      return Math.max(0, d.dy - 1) + "px";
    });
  };

  handleZoom = function(e) {
    var image,
    _this = this;
    e.preventDefault();
    if (this.loaded) {
      return window.zoom.zoom(this, this.parentNode);
    } else {
      image = document.createElement("img");
      image.onload = function() {
        window.zoom.cache[image.src] = image;
        _this.loaded = true;
        return window.zoom.zoom(_this, _this.parentNode);
      };
      return image.src = this.getAttribute("data-url");
    }
  };

  cacheImage = function(e) {
    var image, url,
    _this = this;
    image = document.createElement("img");
    url = this.getAttribute("data-url");
    image.onload = function() {
      _this.loaded = true;
      window.zoom.cache[url] = image;
      return _this.removeEventListener("mouseover", cacheImage, false);
    };
    return image.src = url;
  };

  init = function() {
    if(album === 'profile')
      FB.api('/' + friend + '/albums', function(response) {
        for(var i=0;i<response.data.length;i++){
          if(response.data[i].type === 'profile'){
            FB.api('/' + response.data[i].id + '/photos?fields=likes.limit(300),name,source,comments,link&limit=200', drawTree);
          }
        }
      });
    else{
      FB.api('/'+ friend +'/photos?fields=likes.limit(500),name,source,comments,link&limit=200', function(response) {
        drawTree(response);
      });
    }
//for recent pictures
};

window.addEventListener("DOMContentLoaded", init, false);
init();
}

function handleStatusChange(response) {
  FB.api('/me/permissions', checkPermissions);
  console.log("ran handleStatusChange");
  document.body.className = response.authResponse ? 'connected' : 'not_connected';
  if(document.body.className === 'not_connected' || !document.body.authorized){
    //if(document.body.className === 'not_connected'){
    console.log("body class name: " + document.body.className);
    console.log("authorized " + document.body.authorized);
   needlogin();
 }
 else{
  console.log("ran login");
  login();
}
}
function checkPermissions(response){
  console.log("checking permissions")
  console.log(response);
  if(document.body.className === 'connected'){
    if(response.data[0].user_photos !== 1 || response.data[0].friends_photos !== 1){
      document.body.authorized = false;
    }
    else{
      document.body.authorized = true;
    }
  }
  else{
    document.body.authorized = false;
  }
  console.log("check permissions authorized?");
  console.log(document.body.authorized);
}

var login = function(form){
  console.log("ran login");
  friend = "";
  album = "profile";
  if(form=== undefined){
    friend = "";
  }
  else{
    friend = form.friend.value;
    for (i = 0; i < form.album.length; i++) {
      if (form.album[i].checked){
        album = form.album[i].value;
      }
    }
  }
  console.log(friend + " " + album);
  console.log(form)
  if(friend === ""){
    friend = "me";
  }
  FB.getLoginStatus(function(response) {
    if (response.status === 'connected') {
      FB.api('/me/permissions', checkPermissions)
      console.log("checking from login function");
      console.log(document.body.authorized);
      if(!document.body.authorized){
        FB.login(function(response) { }, {scope:'user_photos,friends_photos'});
        needlogin();
      }
      else{
        document.getElementsByClassName("auth")[0].innerHTML = "Loading...";
        run();
      }
    } else if (response.status === 'not_authorized') {
      FB.login(function(response) { }, {scope:'user_photos,friends_photos'});
      needlogin();
    } else {
      FB.login(function(response) { }, {scope:'user_photos,friends_photos'});
      needlogin();
    }
  }); 

}

var needlogin = function(){
  //console.log("needlogin");
  auth = document.getElementsByClassName("auth")[0];
  auth.style.display = "block";
  return window.setTimeout(function() {
    return auth.className = "auth loaded";
  }, 0);
}

var showForm = function(){
  document.getElementById('form').style.display= "block";
  document.getElementById('viewfriend').style.display= "none";
}
var hideForm = function(box){
  document.getElementById('form').style.display= "none";
  document.getElementById('viewfriend').style.display= "inline";
  box.value = "";
}


window.fbAsyncInit = function() {
  FB.init({ appId: '241454125902374', 
    status: true, 
    cookie: true,
    xfbml: true,
    oauth: true});

  FB.Event.subscribe('auth.statusChange', handleStatusChange);
  needlogin();
};


(function(d){
  var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
  if (d.getElementById(id)) {return;}
  js = d.createElement('script'); js.id = id; js.async = true;
  js.src = "//connect.facebook.net/en_US/all.js";
  ref.parentNode.insertBefore(js, ref);
}(document));